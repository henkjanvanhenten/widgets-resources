dist: xenial
language: node_js
cache: npm
branches:
    only:
        - master
env:
    global:
        # List of all touched files, excluding paths starting with 'packages'
        - CHANGED_GLOBAL_FILES=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep -v "^packages")
        - CHANGED_WEB_PROJECTS=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep "packages-web")
        - CHANGED_NATIVE_PROJECTS=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep "packages-native")
        - NATIVE_PROJECTS=$(if [ "$CHANGED_NATIVE_PROJECTS" != "" ]; then echo "true"; else echo "false"; fi)
        - WEB_PROJECTS=$(if [ "$CHANGED_WEB_PROJECTS" != "" ]; then echo "true"; else echo "false"; fi)
        # Build only touched packages for pull requests when no shared files were touched
        - PARTIAL_BUILD=$(if [ "$CHANGED_GLOBAL_FILES" = "" ] && [ "$TRAVIS_PULL_REQUEST" != "false" ]; then echo "true"; else echo "false"; fi)
        # Set arguments so lerna only runs scripts in changed packages
        - SCRIPT_ARGS=$(if [ "$PARTIAL_BUILD" = "true" ]; then echo "--since $TRAVIS_BRANCH"; else echo ""; fi)
        - ADB_INSTALL_TIMEOUT=8
stages:
    - pre-build
    - build
    - tests
jobs:
    include:
        - stage: pre-build
          name: "Lint"
          script:
              - npm run lint -- $SCRIPT_ARGS
        - stage: build
          name: "Build on Linux"
          script:
              - npm run build -- $SCRIPT_ARGS
        - name: "Build on Windows"
          os: windows
          script:
              - npm run build -- $SCRIPT_ARGS
        - stage: tests
          name: "Jest unit tests"
          script:
              - npm run test -- $SCRIPT_ARGS
        - name: "Web Automated Tests"
          fast_finish: true
          dist: trusty
          addons:
              chrome: stable
          services:
              - xvfb
          before_install:
              - export CHROME_BIN=chromium-browser
              - export DISPLAY=:99.0
              - sh -e /etc/init.d/xvfb start
              - sleep 3
          script:
              - if [ "$WEB_PROJECTS" = "true" ] && [ "$PARTIAL_BUILD" = "true" ]; then travis_wait 30 npm run test:e2e -- $SCRIPT_ARGS; else echo "No individuals web package changed. Skipping tests"; fi
        - name: "iOS Automated tests"
          fast_finish: true
          language: objective-c
          os: osx
          osx_image: xcode11.2
          env:
              - REACT_NATIVE_VERSION=0.59.9
              - PATH=$PATH:~/Library/Python/2.7/bin
              - CODE_SIGNING_REQUIRED=NO
          before_install:
              - nvm install node
              - brew tap wix/brew
              - brew install applesimutils
              - cd detox
          install:
              - npm ci
          script:
              - if [ "$NATIVE_PROJECTS" = "true" ]; then npm run test:ios; else echo "No native package changed. Skipping ios tests"; fi
        - name: "Android Automated tests"
          language: android
          fast_finish: true
          android:
              components:
                  - android-28
                  - android-26
                  - build-tools-28.0.3
                  - tools
                  - platform-tools
                  - extra-google-google_play_services
                  - extra-google-m2repository
                  - extra-android-m2repository
                  - sys-img-x86_64-android-26
          before_install:
              - echo yes | sdkmanager ndk-bundle
              - export ANDROID_NDK="$ANDROID_HOME/ndk-bundle"
              # Need to update the tools so we'd have a decent 'emulator' bin and the newer 'avdmanager' (instead of the 'android' bin)
              - echo yes | sdkmanager --update
              - sdkmanager --list
              # Set up emulator
              - avdmanager create avd --force --name EMULATOR --abi x86_64 --device "Nexus 5X" -k "system-images;android-26;default;x86_64"
              - echo "skin.name=1080x1920" >> ~/.android/avd/EMULATOR.avd/config.ini
              - echo "vm.heapSize=512" >> ~/.android/avd/EMULATOR.avd/config.ini
              - echo "hw.ramSize=1024" >> ~/.android/avd/EMULATOR.avd/config.ini
              - nvm install node
              - cd detox
          install:
              - npm ci
              - /usr/local/android-sdk/tools/emulator @EMULATOR -verbose -no-window -no-snapshot -no-boot-anim -no-accel -noaudio -gpu swiftshader_indirect &
          script:
              - ./scripts/ci.android.sh
notifications:
    slack:
        template:
            - "Build <%{build_url}|#%{build_number}> of %{repository_slug}@%{branch} in PR <%{pull_request_url}|#%{pull_request_number}> by %{author} %{result} in %{duration}"
        rooms:
            - "mendix:$SLACK_KEY#widget-team-private"
        on_pull_requests: true
